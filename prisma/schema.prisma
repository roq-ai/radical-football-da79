generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description      String?            @db.VarChar(255)
  image            String?            @db.VarChar(255)
  name             String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  user_id          String             @db.Uuid
  tenant_id        String             @db.VarChar(255)
  user             user               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player           player[]
  training_session training_session[]
}

model player {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String            @db.Uuid
  academy_id      String            @db.Uuid
  position        String            @db.VarChar(255)
  date_of_birth   DateTime          @db.Date
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  academy         academy           @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player_training player_training[]
}

model player_training {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id           String           @db.Uuid
  training_session_id String           @db.Uuid
  performance_metric  Int
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @db.Timestamp(6)
  player              player           @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  training_session    training_session @relation(fields: [training_session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model training_session {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  academy_id      String            @db.Uuid
  coach_id        String            @db.Uuid
  date            DateTime          @db.Date
  description     String?           @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  player_training player_training[]
  academy         academy           @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user              @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  academy          academy[]
  player           player[]
  training_session training_session[]
}
